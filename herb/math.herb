fn fact(n: int) -> int {
    if n <= 1 {
        return 1;
    }
    return n * fact(n - 1);
}

fn is_prime(x: int) -> bool {
    var i = 2;

    while i * i <= x {
        if x % i == 0 {
            return false;
        }
        i = i + 1;
    }
    return true;
}

fn fib(n: int) -> int {
    var a = 1;
    var b = 1;

    var i = 2;

    while i < 10 {
        var next = a + b;
        a = b;
        b = next;
        i = i + 1;
    }
    return next;
}

fn phi(x: int) -> int {
    var n = x;
	var result = n;

	var i = 2;
	while i * i <= n {
	    if n % i == 0 {
	        while n % i == 0 {
	            n = n / i;
	        }
	        result = result - result / i;
	    }
	    i = i + 1;
	}
	if n > 1 {
	    result = result - result / n;
	}
	return result;
}
